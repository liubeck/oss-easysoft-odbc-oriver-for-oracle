# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AS = @AS@
AWK = @AWK@
CC = @CC@
CPP = @CPP@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD_ODBCINSTLIB = @LD_ODBCINSTLIB@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBTOOL = @LIBTOOL@
LIB_VERSION = @LIB_VERSION@
LN_S = @LN_S@
OBJDUMP = @OBJDUMP@
ODBCIDIR = @ODBCIDIR@
ODBCINSTLIB = @ODBCINSTLIB@
ODBCLDIR = @ODBCLDIR@
ODBCLIB = @ODBCLIB@
ORAIDIR = @ORAIDIR@
ORALDIR = @ORALDIR@
ORALIB = @ORALIB@
ORANDIR = @ORANDIR@
ORAPDIR = @ORAPDIR@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
STRIP = @STRIP@
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

# $Id: Makefile.am,v 1.20 2005/11/19 01:21:10 dbox Exp $
check_PROGRAMS = \
connect1 \
connect2 \
direct_exec1 \
direct_exec2 \
insert1 \
insert3 \
read1 \
read2 \
read3 \
malloctest \
rollback1 \
commit1 \
insert2 \
insert4 \
lowlevel \
getinfo1 \
insert5 \
insert6 \
insert7 \
read4 \
readchars \
SQLColumns1 \
SQLPutTest \
cleanup


INCLUDES = -I${ODBCIDIR} -I../src \
 -I${ODBCIDIR} -I${ORAIDIR} -I${ORANDIR} -I${ORAPDIR}


EXTRA_DIST = check_oracle_environment runtests 
TESTS = check_oracle_environment $(check_PROGRAMS)

LDFLAGS = -L${ODBCLDIR} -lodbc -L../src/.libs -loraodbc ../src/mem_functions.o ../src/common.o ../src/common_functions.o

CLEANFILES = *.*~ .deps/*.P core core.*
subdir = test
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
check_PROGRAMS = connect1$(EXEEXT) connect2$(EXEEXT) \
	direct_exec1$(EXEEXT) direct_exec2$(EXEEXT) insert1$(EXEEXT) \
	insert3$(EXEEXT) read1$(EXEEXT) read2$(EXEEXT) read3$(EXEEXT) \
	malloctest$(EXEEXT) rollback1$(EXEEXT) commit1$(EXEEXT) \
	insert2$(EXEEXT) insert4$(EXEEXT) lowlevel$(EXEEXT) \
	getinfo1$(EXEEXT) insert5$(EXEEXT) insert6$(EXEEXT) \
	insert7$(EXEEXT) read4$(EXEEXT) readchars$(EXEEXT) \
	SQLColumns1$(EXEEXT) SQLPutTest$(EXEEXT) cleanup$(EXEEXT)
SQLColumns1_SOURCES = SQLColumns1.c
SQLColumns1_OBJECTS = SQLColumns1.$(OBJEXT)
SQLColumns1_LDADD = $(LDADD)
SQLColumns1_DEPENDENCIES =
SQLColumns1_LDFLAGS =
SQLPutTest_SOURCES = SQLPutTest.c
SQLPutTest_OBJECTS = SQLPutTest.$(OBJEXT)
SQLPutTest_LDADD = $(LDADD)
SQLPutTest_DEPENDENCIES =
SQLPutTest_LDFLAGS =
cleanup_SOURCES = cleanup.c
cleanup_OBJECTS = cleanup.$(OBJEXT)
cleanup_LDADD = $(LDADD)
cleanup_DEPENDENCIES =
cleanup_LDFLAGS =
commit1_SOURCES = commit1.c
commit1_OBJECTS = commit1.$(OBJEXT)
commit1_LDADD = $(LDADD)
commit1_DEPENDENCIES =
commit1_LDFLAGS =
connect1_SOURCES = connect1.c
connect1_OBJECTS = connect1.$(OBJEXT)
connect1_LDADD = $(LDADD)
connect1_DEPENDENCIES =
connect1_LDFLAGS =
connect2_SOURCES = connect2.c
connect2_OBJECTS = connect2.$(OBJEXT)
connect2_LDADD = $(LDADD)
connect2_DEPENDENCIES =
connect2_LDFLAGS =
direct_exec1_SOURCES = direct_exec1.c
direct_exec1_OBJECTS = direct_exec1.$(OBJEXT)
direct_exec1_LDADD = $(LDADD)
direct_exec1_DEPENDENCIES =
direct_exec1_LDFLAGS =
direct_exec2_SOURCES = direct_exec2.c
direct_exec2_OBJECTS = direct_exec2.$(OBJEXT)
direct_exec2_LDADD = $(LDADD)
direct_exec2_DEPENDENCIES =
direct_exec2_LDFLAGS =
getinfo1_SOURCES = getinfo1.c
getinfo1_OBJECTS = getinfo1.$(OBJEXT)
getinfo1_LDADD = $(LDADD)
getinfo1_DEPENDENCIES =
getinfo1_LDFLAGS =
insert1_SOURCES = insert1.c
insert1_OBJECTS = insert1.$(OBJEXT)
insert1_LDADD = $(LDADD)
insert1_DEPENDENCIES =
insert1_LDFLAGS =
insert2_SOURCES = insert2.c
insert2_OBJECTS = insert2.$(OBJEXT)
insert2_LDADD = $(LDADD)
insert2_DEPENDENCIES =
insert2_LDFLAGS =
insert3_SOURCES = insert3.c
insert3_OBJECTS = insert3.$(OBJEXT)
insert3_LDADD = $(LDADD)
insert3_DEPENDENCIES =
insert3_LDFLAGS =
insert4_SOURCES = insert4.c
insert4_OBJECTS = insert4.$(OBJEXT)
insert4_LDADD = $(LDADD)
insert4_DEPENDENCIES =
insert4_LDFLAGS =
insert5_SOURCES = insert5.c
insert5_OBJECTS = insert5.$(OBJEXT)
insert5_LDADD = $(LDADD)
insert5_DEPENDENCIES =
insert5_LDFLAGS =
insert6_SOURCES = insert6.c
insert6_OBJECTS = insert6.$(OBJEXT)
insert6_LDADD = $(LDADD)
insert6_DEPENDENCIES =
insert6_LDFLAGS =
insert7_SOURCES = insert7.c
insert7_OBJECTS = insert7.$(OBJEXT)
insert7_LDADD = $(LDADD)
insert7_DEPENDENCIES =
insert7_LDFLAGS =
lowlevel_SOURCES = lowlevel.c
lowlevel_OBJECTS = lowlevel.$(OBJEXT)
lowlevel_LDADD = $(LDADD)
lowlevel_DEPENDENCIES =
lowlevel_LDFLAGS =
malloctest_SOURCES = malloctest.c
malloctest_OBJECTS = malloctest.$(OBJEXT)
malloctest_LDADD = $(LDADD)
malloctest_DEPENDENCIES =
malloctest_LDFLAGS =
read1_SOURCES = read1.c
read1_OBJECTS = read1.$(OBJEXT)
read1_LDADD = $(LDADD)
read1_DEPENDENCIES =
read1_LDFLAGS =
read2_SOURCES = read2.c
read2_OBJECTS = read2.$(OBJEXT)
read2_LDADD = $(LDADD)
read2_DEPENDENCIES =
read2_LDFLAGS =
read3_SOURCES = read3.c
read3_OBJECTS = read3.$(OBJEXT)
read3_LDADD = $(LDADD)
read3_DEPENDENCIES =
read3_LDFLAGS =
read4_SOURCES = read4.c
read4_OBJECTS = read4.$(OBJEXT)
read4_LDADD = $(LDADD)
read4_DEPENDENCIES =
read4_LDFLAGS =
readchars_SOURCES = readchars.c
readchars_OBJECTS = readchars.$(OBJEXT)
readchars_LDADD = $(LDADD)
readchars_DEPENDENCIES =
readchars_LDFLAGS =
rollback1_SOURCES = rollback1.c
rollback1_OBJECTS = rollback1.$(OBJEXT)
rollback1_LDADD = $(LDADD)
rollback1_DEPENDENCIES =
rollback1_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/SQLColumns1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SQLPutTest.Po ./$(DEPDIR)/cleanup.Po \
@AMDEP_TRUE@	./$(DEPDIR)/commit1.Po ./$(DEPDIR)/connect1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/connect2.Po ./$(DEPDIR)/direct_exec1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/direct_exec2.Po ./$(DEPDIR)/getinfo1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/insert1.Po ./$(DEPDIR)/insert2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/insert3.Po ./$(DEPDIR)/insert4.Po \
@AMDEP_TRUE@	./$(DEPDIR)/insert5.Po ./$(DEPDIR)/insert6.Po \
@AMDEP_TRUE@	./$(DEPDIR)/insert7.Po ./$(DEPDIR)/lowlevel.Po \
@AMDEP_TRUE@	./$(DEPDIR)/malloctest.Po ./$(DEPDIR)/read1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/read2.Po ./$(DEPDIR)/read3.Po \
@AMDEP_TRUE@	./$(DEPDIR)/read4.Po ./$(DEPDIR)/readchars.Po \
@AMDEP_TRUE@	./$(DEPDIR)/rollback1.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
DIST_SOURCES = SQLColumns1.c SQLPutTest.c cleanup.c commit1.c connect1.c \
	connect2.c direct_exec1.c direct_exec2.c getinfo1.c insert1.c \
	insert2.c insert3.c insert4.c insert5.c insert6.c insert7.c \
	lowlevel.c malloctest.c read1.c read2.c read3.c read4.c \
	readchars.c rollback1.c
DIST_COMMON = Makefile.am Makefile.in
SOURCES = SQLColumns1.c SQLPutTest.c cleanup.c commit1.c connect1.c connect2.c direct_exec1.c direct_exec2.c getinfo1.c insert1.c insert2.c insert3.c insert4.c insert5.c insert6.c insert7.c lowlevel.c malloctest.c read1.c read2.c read3.c read4.c readchars.c rollback1.c

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  test/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
SQLColumns1$(EXEEXT): $(SQLColumns1_OBJECTS) $(SQLColumns1_DEPENDENCIES) 
	@rm -f SQLColumns1$(EXEEXT)
	$(LINK) $(SQLColumns1_LDFLAGS) $(SQLColumns1_OBJECTS) $(SQLColumns1_LDADD) $(LIBS)
SQLPutTest$(EXEEXT): $(SQLPutTest_OBJECTS) $(SQLPutTest_DEPENDENCIES) 
	@rm -f SQLPutTest$(EXEEXT)
	$(LINK) $(SQLPutTest_LDFLAGS) $(SQLPutTest_OBJECTS) $(SQLPutTest_LDADD) $(LIBS)
cleanup$(EXEEXT): $(cleanup_OBJECTS) $(cleanup_DEPENDENCIES) 
	@rm -f cleanup$(EXEEXT)
	$(LINK) $(cleanup_LDFLAGS) $(cleanup_OBJECTS) $(cleanup_LDADD) $(LIBS)
commit1$(EXEEXT): $(commit1_OBJECTS) $(commit1_DEPENDENCIES) 
	@rm -f commit1$(EXEEXT)
	$(LINK) $(commit1_LDFLAGS) $(commit1_OBJECTS) $(commit1_LDADD) $(LIBS)
connect1$(EXEEXT): $(connect1_OBJECTS) $(connect1_DEPENDENCIES) 
	@rm -f connect1$(EXEEXT)
	$(LINK) $(connect1_LDFLAGS) $(connect1_OBJECTS) $(connect1_LDADD) $(LIBS)
connect2$(EXEEXT): $(connect2_OBJECTS) $(connect2_DEPENDENCIES) 
	@rm -f connect2$(EXEEXT)
	$(LINK) $(connect2_LDFLAGS) $(connect2_OBJECTS) $(connect2_LDADD) $(LIBS)
direct_exec1$(EXEEXT): $(direct_exec1_OBJECTS) $(direct_exec1_DEPENDENCIES) 
	@rm -f direct_exec1$(EXEEXT)
	$(LINK) $(direct_exec1_LDFLAGS) $(direct_exec1_OBJECTS) $(direct_exec1_LDADD) $(LIBS)
direct_exec2$(EXEEXT): $(direct_exec2_OBJECTS) $(direct_exec2_DEPENDENCIES) 
	@rm -f direct_exec2$(EXEEXT)
	$(LINK) $(direct_exec2_LDFLAGS) $(direct_exec2_OBJECTS) $(direct_exec2_LDADD) $(LIBS)
getinfo1$(EXEEXT): $(getinfo1_OBJECTS) $(getinfo1_DEPENDENCIES) 
	@rm -f getinfo1$(EXEEXT)
	$(LINK) $(getinfo1_LDFLAGS) $(getinfo1_OBJECTS) $(getinfo1_LDADD) $(LIBS)
insert1$(EXEEXT): $(insert1_OBJECTS) $(insert1_DEPENDENCIES) 
	@rm -f insert1$(EXEEXT)
	$(LINK) $(insert1_LDFLAGS) $(insert1_OBJECTS) $(insert1_LDADD) $(LIBS)
insert2$(EXEEXT): $(insert2_OBJECTS) $(insert2_DEPENDENCIES) 
	@rm -f insert2$(EXEEXT)
	$(LINK) $(insert2_LDFLAGS) $(insert2_OBJECTS) $(insert2_LDADD) $(LIBS)
insert3$(EXEEXT): $(insert3_OBJECTS) $(insert3_DEPENDENCIES) 
	@rm -f insert3$(EXEEXT)
	$(LINK) $(insert3_LDFLAGS) $(insert3_OBJECTS) $(insert3_LDADD) $(LIBS)
insert4$(EXEEXT): $(insert4_OBJECTS) $(insert4_DEPENDENCIES) 
	@rm -f insert4$(EXEEXT)
	$(LINK) $(insert4_LDFLAGS) $(insert4_OBJECTS) $(insert4_LDADD) $(LIBS)
insert5$(EXEEXT): $(insert5_OBJECTS) $(insert5_DEPENDENCIES) 
	@rm -f insert5$(EXEEXT)
	$(LINK) $(insert5_LDFLAGS) $(insert5_OBJECTS) $(insert5_LDADD) $(LIBS)
insert6$(EXEEXT): $(insert6_OBJECTS) $(insert6_DEPENDENCIES) 
	@rm -f insert6$(EXEEXT)
	$(LINK) $(insert6_LDFLAGS) $(insert6_OBJECTS) $(insert6_LDADD) $(LIBS)
insert7$(EXEEXT): $(insert7_OBJECTS) $(insert7_DEPENDENCIES) 
	@rm -f insert7$(EXEEXT)
	$(LINK) $(insert7_LDFLAGS) $(insert7_OBJECTS) $(insert7_LDADD) $(LIBS)
lowlevel$(EXEEXT): $(lowlevel_OBJECTS) $(lowlevel_DEPENDENCIES) 
	@rm -f lowlevel$(EXEEXT)
	$(LINK) $(lowlevel_LDFLAGS) $(lowlevel_OBJECTS) $(lowlevel_LDADD) $(LIBS)
malloctest$(EXEEXT): $(malloctest_OBJECTS) $(malloctest_DEPENDENCIES) 
	@rm -f malloctest$(EXEEXT)
	$(LINK) $(malloctest_LDFLAGS) $(malloctest_OBJECTS) $(malloctest_LDADD) $(LIBS)
read1$(EXEEXT): $(read1_OBJECTS) $(read1_DEPENDENCIES) 
	@rm -f read1$(EXEEXT)
	$(LINK) $(read1_LDFLAGS) $(read1_OBJECTS) $(read1_LDADD) $(LIBS)
read2$(EXEEXT): $(read2_OBJECTS) $(read2_DEPENDENCIES) 
	@rm -f read2$(EXEEXT)
	$(LINK) $(read2_LDFLAGS) $(read2_OBJECTS) $(read2_LDADD) $(LIBS)
read3$(EXEEXT): $(read3_OBJECTS) $(read3_DEPENDENCIES) 
	@rm -f read3$(EXEEXT)
	$(LINK) $(read3_LDFLAGS) $(read3_OBJECTS) $(read3_LDADD) $(LIBS)
read4$(EXEEXT): $(read4_OBJECTS) $(read4_DEPENDENCIES) 
	@rm -f read4$(EXEEXT)
	$(LINK) $(read4_LDFLAGS) $(read4_OBJECTS) $(read4_LDADD) $(LIBS)
readchars$(EXEEXT): $(readchars_OBJECTS) $(readchars_DEPENDENCIES) 
	@rm -f readchars$(EXEEXT)
	$(LINK) $(readchars_LDFLAGS) $(readchars_OBJECTS) $(readchars_LDADD) $(LIBS)
rollback1$(EXEEXT): $(rollback1_OBJECTS) $(rollback1_DEPENDENCIES) 
	@rm -f rollback1$(EXEEXT)
	$(LINK) $(rollback1_LDFLAGS) $(rollback1_OBJECTS) $(rollback1_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SQLColumns1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SQLPutTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cleanup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/commit1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/direct_exec1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/direct_exec2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getinfo1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/insert1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/insert2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/insert3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/insert4.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/insert5.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/insert6.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/insert7.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lowlevel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malloctest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/read1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/read2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/read3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/read4.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/readchars.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rollback1.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CCDEPMODE = @CCDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xpass=`expr $$xpass + 1`; \
	        failed=`expr $$failed + 1`; \
	        echo "XPASS: $$tst"; \
	      ;; \
	      *) \
	        echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xfail=`expr $$xfail + 1`; \
	        echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
	        failed=`expr $$failed + 1`; \
	        echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes=`echo "$$banner" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool tags uninstall uninstall-am \
	uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
